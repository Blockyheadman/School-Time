import{initLoad}from"./modules/initLoad.min.js";import{getPeriodTimes,setupTimes}from"./modules/timeSetup.min.js";import{getEvents,setupEvents}from"./modules/eventSetup.min.js";if(navigator.serviceWorker){window.addEventListener("load",async function(){try{const SW_REGISTRATION=await navigator.serviceWorker.register("./serviceWorker.min.js");if(SW_REGISTRATION.installing){console.debug("Installing service worker..")}else if(SW_REGISTRATION.waiting){console.debug("Service worker has been installed!")}else if(SW_REGISTRATION.active){console.debug("Service worker is active!")}}catch(err){console.error(`Registration failed with ${err}`)}})}initLoad();let periods=await getPeriodTimes("Cabot-High");let studentCalendarEvents=await getEvents("Cabot-High","studentCalendar");let extraEvents=await getEvents("Cabot-High","extra");async function updateTimes(){const date=new Date;const morningDate=new Date(periods[0].time);if(date.getDate()>morningDate.getDate()){periods=await getPeriodTimes("Cabot-High");studentCalendarEvents=await getEvents("Cabot-High","studentCalendar");extraEvents=await getEvents("Cabot-High","extra")}setupTimes(periods);setupEvents(studentCalendarEvents,"studentCalendar");setupEvents(extraEvents,"extra");const currentTime=new Date;currentTime.setMilliseconds(0)}await updateTimes();setInterval(updateTimes,500,periods);