import{clockTimeToTimestamp}from"./timeConversion.min.js";export{setupTimes,getPeriodTimes,getCurrentPeriodIndex};let currentPeriodIndex;function getCurrentPeriodIndex(){return currentPeriodIndex}function setupTimes(periods){if(!periods){throw new ReferenceError('Missing parameter "periods"')}const CURRENT_DATE=(new Date).getTime();const DAY_END_TIME=document.getElementById("day-end-time");const PROGRESS_BAR=document.getElementById("day-finished-progress");const PROGRESS_BAR_LABEL=document.getElementById("day-finished-progress-label");for(let i=0;i<periods.length;i++){if(CURRENT_DATE<periods[i].time)break;const NEXT_PERIOD=i<periods.length-1?periods[i+1]:periods[0];if(i<periods.length-1&&CURRENT_DATE>NEXT_PERIOD.time)continue;currentPeriodIndex=i;document.getElementById("current-period").innerText=periods[i].name;let hoursLeft=Math.floor((NEXT_PERIOD.time-CURRENT_DATE)/1e3/60/60);let minutesLeft=Math.floor((NEXT_PERIOD.time-CURRENT_DATE)/1e3/60);let secondsLeft=Math.abs(minutesLeft*60-Math.floor((NEXT_PERIOD.time-CURRENT_DATE)/1e3));let timeLeftString=createTimeLeftString(hoursLeft,minutesLeft,secondsLeft,NEXT_PERIOD);document.getElementById("next-period-time").innerText=timeLeftString;if(CURRENT_DATE<periods[periods.length-2].time){hoursLeft=Math.floor((periods[periods.length-2].time-CURRENT_DATE)/1e3/60/60);minutesLeft=Math.floor((periods[periods.length-2].time-CURRENT_DATE)/1e3/60);secondsLeft=Math.abs(minutesLeft*60-Math.floor((periods[periods.length-2].time-CURRENT_DATE)/1e3));timeLeftString=createTimeLeftString(hoursLeft,minutesLeft,secondsLeft,periods[periods.length-2]);DAY_END_TIME.innerText=timeLeftString}else{DAY_END_TIME.innerText="It's the end of the school day! ðŸ¥³"}const FINISHED_PERCENT=(CURRENT_DATE-periods[1].time)/(periods[periods.length-2].time-periods[1].time)*100;PROGRESS_BAR.value=FINISHED_PERCENT.toFixed(2);PROGRESS_BAR.innerText=`${FINISHED_PERCENT.toFixed(2)}%`;PROGRESS_BAR_LABEL.innerText=FINISHED_PERCENT<0?"Day Progress: 0%":FINISHED_PERCENT<100?`Day Progress: ${FINISHED_PERCENT.toFixed(2)}%`:"Day Progress: 100%";if(document.hidden){let timeString=`${periods[i].short} - `;timeString+=hoursLeft>0?(hoursLeft<10?"0":"")+hoursLeft+":":"";timeString+=minutesLeft>0?(minutesLeft-hoursLeft*60<10?"0":"")+minutesLeft-hoursLeft*60+":":"";timeString+=secondsLeft>0?(secondsLeft<10?"0":"")+secondsLeft:"";document.title=timeString}else{document.title="Schooling Hours"}}}function createTimeLeftString(hoursLeft,minutesLeft,secondsLeft,nextPeriodInfo){let timeLeftString=hoursLeft>0?hoursLeft+" hour"+(hoursLeft!==1?"s":"")+" and ":"";timeLeftString+=minutesLeft>0?minutesLeft-hoursLeft*60+" minute"+(minutesLeft!==1?"s":"")+" and ":"";timeLeftString+=secondsLeft+" second"+(secondsLeft!==1?"s":"");timeLeftString+=" left until "+nextPeriodInfo.name;return timeLeftString}async function getPeriodTimes(periodSetName){if(!periodSetName){throw new ReferenceError('Missing parameter "periodSetName"')}return await fetch(`res/classInfo/periods/${periodSetName}.json`).then(response=>response.json()).then(data=>{for(let i=0;i<data.length;i++){if(!data[i].time){throw new Error(`No 'time' property specified in period item ${i}`)}else{data[i].time=clockTimeToTimestamp(data[i].time)}if(!data[i].name){throw new Error(`No 'name' property specified in period item ${i}`)}if(!data[i].short){throw new Error(`No 'short' property specified in period item ${i}`)}}return data})}function getCustomPeriodTimes(periodSet){if(!periodSet){throw new ReferenceError('Missing parameter "periodSet"')}for(let i=0;i<periodSet.length;i++){if(!periodSet[i].time){console.error(`No 'time' property specified in period item ${i}`)}else{periodSet[i].time=clockTimeToTimestamp(periodSet[i].time)}if(!periodSet[i].name){console.error(`No 'name' property specified in period item ${i}`)}if(!periodSet[i].short){console.error(`No 'short' property specified in period item ${i}`)}}return periodSet}