export{clockTimeToTimestamp,dateTimeToTimestamp,CLOCK_TIME_REGEX,DATE_REGEX};const CLOCK_TIME_REGEX=/^(2[0-3]|[01]?[0-9]):([0-5]?[0-9])$/;const DATE_REGEX=/^(0?[1-9]|1[0-2])[\/-]([0-2]?[0-9]|3[0-1])[\/-]([0-9]{4})$/;function clockTimeToTimestamp(time){if(!CLOCK_TIME_REGEX.test(time)){throw RangeError(`Invalid time input "${time}".\nMust follow Military time format (eg. 22:06).`)}const TIMES=time.split(":");const CURRENT_DATE=new Date;CURRENT_DATE.setHours(TIMES[0]);CURRENT_DATE.setMinutes(TIMES[1]);CURRENT_DATE.setSeconds(0);CURRENT_DATE.setMilliseconds(0);return CURRENT_DATE.getTime()}function dateTimeToTimestamp(date,time="23:59"){if(!CLOCK_TIME_REGEX.test(time)){throw RangeError(`Invalid time input "${time}".\nMust follow Military time format (eg. 22:06).`)}if(!DATE_REGEX.test(date)){throw RangeError(`Invalid date input "${date}".\nMust follow MM/DD/YYYY format (eg. 5/20/2026 OR 05-20-2026).`)}const TIMES=time.split(":");const DATES=date.split(/[\/-]/);const CURRENT_DATE=new Date;CURRENT_DATE.setMonth(parseInt(DATES[0])-1,parseInt(DATES[1]));CURRENT_DATE.setFullYear(parseInt(DATES[2]));CURRENT_DATE.setHours(TIMES[0]);CURRENT_DATE.setMinutes(TIMES[1]);CURRENT_DATE.setSeconds(0);CURRENT_DATE.setMilliseconds(0);return CURRENT_DATE.getTime()}